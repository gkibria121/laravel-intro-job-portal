services:
  web:
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile 
    volumes: 
      # -----------------------------------------------------------
      - laravel-storage-production:/var/www/storage:ro
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - traefik-network

    ports: 
      # -----------------------------------------------------------
      - "${NGINX_PORT:-8089}:80"
    depends_on:
     - php-fpm  

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lara-job.rule=Host(`jobs.gkibria121.com`)"
      - "traefik.http.routers.lara-job.entrypoints=web"
      - "traefik.http.services.lara-job.loadbalancer.server.port=80"


  php-fpm:
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production 
    volumes:
      - laravel-public-assets:/var/www/public/build
      - laravel-storage-production:/var/www/storage 
    env_file:
      - .env
    networks:
      - traefik-network
    depends_on:
      postgres:
        condition: service_healthy


  postgres:
    image: postgres:16
    restart: unless-stopped
    user: postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE:-app}
      - POSTGRES_USER=${POSTGRES_USERNAME:-laravel}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - traefik-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME:-laravel} -d ${POSTGRES_DATABASE:-app}"]
      interval: 5s
      timeout: 5s
      retries: 5


  redis:
    image: redis:alpine 
    networks:
      - traefik-network 
      
 

networks: 
  # -----------------------------------------------------------
  traefik-network:
    external: true
  

volumes:
  postgres-data-production:
  laravel-storage-production:
  laravel-public-assets:
